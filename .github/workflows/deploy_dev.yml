name: SMA Backend CI/CD

on:
  push:
    branches: [master]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Prepare .env File
        env:
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          TEST: ${{ secrets.TEST }}
        run: |
          chmod +x ./setup-cicd-env/script.sh
          ./setup-cicd-env/script.sh

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Docker Image
        run: |
          docker-compose -f docker-compose.dev.yml build
          docker-compose -f docker-compose.dev.yml push

      - name: Upload .env file
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: ./sma_backend/conf/.env

  deploy-to-dev:
    runs-on: bitnova-runner
    environment: dev
    needs: build-and-push

    steps:
      - name: Download .env file
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: /home/ubuntu/deploy/sma-backend-docker/sma_backend/conf

      - name: Copy docker-compose file to deploy directory
        run: |
          cp docker-compose.dev.yml /home/ubuntu/deploy/sma-backend-docker/

      - name: Deploy Container
        run: |
          cd /home/ubuntu/deploy/sma-backend-docker/
          docker-compose -f docker-compose.dev.yml down --remove-orphans
          docker-compose -f docker-compose.dev.yml up -d
